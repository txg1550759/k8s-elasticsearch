apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  ports:
  - port: 9200
    name: http
  clusterIP: None
  selector:
    name: elasticsearch-data
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-cluster
  labels:
    app: elasticsearch-cluster
spec:
  ports:
  - port: 9300
    name: cluster-comms
  clusterIP: None
  selector:
    app: elasticsearch
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elasticsearch-data
spec:
  serviceName: "elasticsearch-data"
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
        name: elasticsearch-data
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
              "name": "init-sysctl",
              "image": "busybox",
              "imagePullPolicy": "IfNotPresent",
              "command": ["sh", "-c", "
                  sysctl -w vm.max_map_count=262144 \n
                  sysctl -w vm.swappiness=1 \n
                  "],
              "securityContext": {
                "privileged": true
              }
            }
          ]'      
    spec:
      serviceAccount: elasticsearch
      serviceAccountName: elasticsearch
      containers:
      - name: elasticsearch
        image: youdowell/k8s-elasticsearch
        ports:
        - name: cluster-comms
          containerPort: 9300
        - name: http
          containerPort: 9200
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 1Gi
        env:
        - name: CLUSTER_NAME
          value: "elasticsearch-cluster"
        - name: NODE_DATA
          value: "true"
        - name: NODE_MASTER
          value: "true"
        - name: ES_JAVA_OPTS
          value: "-Xms500m -Xmx500m -Djava.net.preferIPv4Stack=true"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVICE_NAME
          value: "elasticsearch-cluster"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        volume.alpha.kubernetes.io/storage-class: default
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
